'.source.php':

    'Create a model':
        'prefix': 'model',
        'body': """
            namespace App;

            use Illuminate\Database\Eloquent\Model;

            class $1 extends Model
            {
                protected $guarded = [];
            }
        """

    # Has one
    '"Has One" Relationship':
        'prefix': 'hasone'
        'body': """
            public function $1()
            {
                return $this->hasOne($2::class);
            }
        """

    # Has many
    '"Has Many" Relationship':
        'prefix': 'hasmany'
        'body': """
            public function $1()
            {
                return $this->hasMany($2::class);
            }
        """

    # Belongs To
    '"Belongs To" Relationship':
        'prefix': 'belongsto'
        'body': """
            public function $1()
            {
                return $this->belongsTo($2::class);
            }
        """
    # Has and Belongs to Many
    '"Belongs To Many" Relationship':
        'prefix': 'btm'
        'body': """
            public function $1()
            {
                return $this->belongsToMany($2::class);
            }
        """

    # Has Many Through
    '"Has Many Through" Relationship':
        'prefix': 'hasmanythrough'
        'body': """
            public function $1()
            {
                return $this->hasManyThrough($2::class, $3::class);
            }
        """

    # Morph To
    'Polymorphism: Morph To':
        'prefix': 'morphto'
        'body': """
            public function $1()
            {
                return $this->morphTo();
            }
        """

    # Morph Many
    'Polymorphism: Morph Many':
        'prefix': 'morph'
        'body': """
            public function $1()
            {
                return $this->morphMany($2::class, '${3:commentable}');
            }
        """

    # Provides another prefix to catch both `morph` and `morphmany`
    'Polymorphism: Morph Many (Long Prefix)':
        'prefix': 'morphmany'
        'body': """
            public function $1()
            {
                return $this->morphMany($2::class, '${3:commentable}');
            }
        """
